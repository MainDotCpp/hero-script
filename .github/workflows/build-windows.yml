name: Build Windows Binary

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch: # 允许手动触发

env:
  CARGO_TERM_COLOR: always
  RUSTFLAGS: "-C target-cpu=native" # 优化编译性能
  
jobs:
  build:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Rust
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: x86_64-pc-windows-msvc
        override: true
        profile: minimal
        components: rustfmt, clippy # 添加rustfmt和clippy组件
        
    - name: Rust Cache
      uses: Swatinem/rust-cache@v2
        
    - name: Install dependencies
      run: |
        rustup component add rustfmt
        rustup component add clippy
        
    - name: Check formatting
      run: cargo fmt --all -- --check
      
    - name: Run clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
      
    - name: Build
      run: cargo build --release
      
    - name: Run tests
      run: cargo test --release
      
    - name: Create artifacts directory
      run: mkdir artifacts
      
    - name: Copy binary to artifacts
      run: |
        cp target/release/lol-macro.exe artifacts/
        cp README.md artifacts/ || echo "No README found"
        
    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: lol-macro-windows
        path: artifacts/
    
    # 设置日期时间作为版本号的一部分
    - name: Set current date as version
      id: date
      run: echo "::set-output name=date::$(date +'%Y.%m.%d.%H%M')"
      shell: bash
        
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        name: Release v${{ steps.date.outputs.date }}
        tag_name: v${{ steps.date.outputs.date }}
        files: artifacts/lol-macro.exe
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 